{"version":3,"sources":["zepto.js","zepto.cookie.js","test.js"],"names":["global","factory","define","amd","this","window","undefined","key","$","classList","camelize","uniq","emptyArray","concat","filter","slice","document","elementDisplay","classCache","cssNumber","fragmentRE","singleTagRE","tagExpanderRE","rootNodeRE","capitalRE","methodAttributes","table","tableRow","containers","readyRE","simpleSelectorRE","class2type","toString","zepto","tempParent","propMap","isArray","Zepto","column-count","columns","font-weight","line-height","opacity","z-index","zoom","createElement","tr","tbody","thead","tfoot","td","th","*","tabindex","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","Array","object","matches","element","selector","nodeType","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","call","match","parent","parentNode","temp","appendChild","qsa","indexOf","removeChild","str","replace","chr","toUpperCase","array","item","idx","fragment","html","name","properties","dom","nodes","container","test","RegExp","$1","innerHTML","each","childNodes","isPlainObject","value","attr","Z","isZ","init","context","trim","find","isFunction","ready","compact","isObject","extend","target","deep","args","arguments","shift","forEach","arg","source","found","maybeID","maybeClass","nameOnly","isSimple","getElementById","getElementsByClassName","getElementsByTagName","querySelectorAll","contains","documentElement","node","type","isWindow","isEmptyObject","obj","isNumeric","val","num","Number","length","isNaN","isFinite","inArray","elem","i","camelCase","String","prototype","uuid","support","expr","noop","map","elements","callback","values","likeArray","push","fn","apply","flatten","grep","JSON","parseJSON","parse","split","toLowerCase","constructor","reduce","sort","splice","toArray","el","readyState","body","addEventListener","get","size","remove","every","not","add","is","excludes","has","eq","first","last","$this","some","closest","collection","_","isDocument","parents","ancestors","filtered","pluck","children","contents","contentDocument","siblings","child","empty","property","show","style","display","getComputedStyle","getPropertyValue","nodeName","defaultDisplay","replaceWith","newContent","before","wrap","structure","func","clone","index","wrapAll","cloneNode","append","wrapInner","self","unwrap","hide","css","toggle","setting","prev","next","originHtml","funcArg","text","newText","textContent","join","result","setAttribute","getAttribute","removeAttr","attribute","prop","removeProp","data","attrName","deserializeValue","multiple","selected","offset","coordinates","coords","parentOffset","offsetParent","props","top","left","getBoundingClientRect","pageXOffset","pageYOffset","width","Math","round","height","computedStyle","dasherize","maybeAddPx","removeProperty","cssText","hasClass","className","classRE","addClass","cls","klass","removeClass","toggleClass","when","scrollTop","hasScrollTop","scrollTo","scrollX","scrollLeft","hasScrollLeft","scrollY","position","parseFloat","detach","dimension","dimensionProperty","m","operator","operatorIndex","inside","argType","arr","copyByClone","nextSibling","firstChild","parentInDocument","insertBefore","traverseNode","fun","len","src","ownerDocument","defaultView","DOCUMENT_NODE","Object","getPrototypeOf","payload","removeAttribute","svg","baseVal","e","isString","_zid","handlers","specialEvents","focusinSupported","focus","blur","hover","mouseenter","mouseleave","zid","findHandlers","event","ns","matcher","matcherFor","handler","sel","parts","eventCapture","captureSetting","del","realEvent","events","delegator","capture","id","set","related","relatedTarget","proxy","compatible","isImmediatePropagationStopped","_args","preventDefault","stopPropagation","removeEventListener","click","mousedown","mouseup","mousemove","proxyFn","unshift","TypeError","bind","on","unbind","off","one","returnTrue","returnFalse","ignoreProperties","eventMethods","stopImmediatePropagation","isDefaultPrevented","predicate","sourceMethod","timeStamp","Date","now","defaultPrevented","returnValue","getPreventDefault","createProxy","originalEvent","delegate","undelegate","live","die","autoRemove","evt","currentTarget","liveFired","trigger","Event","dispatchEvent","triggerHandler","createEvent","bubbles","initEvent","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","originAnchor","triggerGlobal","settings","eventName","triggerAndReturn","ajaxBeforeSend","xhr","beforeSend","ajaxSuccess","deferred","status","success","resolveWith","ajaxComplete","ajaxError","error","rejectWith","complete","active","ajaxStop","appendQuery","url","query","parseArguments","dataType","href","location","ajaxJSONP","options","ajax","abort","errorType","script","responseData","abortTimeout","_callbackName","jsonpCallback","callbackName","originalCallback","promise","clearTimeout","head","timeout","setTimeout","ajaxSettings","XMLHttpRequest","accepts","json","xml","crossDomain","processData","cache","dataFilter","urlAnchor","hashIndex","Deferred","ajaxStart","protocol","host","param","traditional","serializeData","hasPlaceholder","jsonp","setHeader","headers","mime","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","onreadystatechange","mimeToDataType","getResponseHeader","responseType","response","responseText","ajaxDataFilter","eval","responseXML","statusText","async","open","username","password","xhrFields","send","post","getJSON","load","escape","encodeURIComponent","params","serialize","scope","hash","serializeArray","field","disabled","checked","elm","submit","nativeGetComputedStyle","pseudoElement","cookie","days","time","decode","expires","setTime","getTime","raw","toUTCString","path","domain","secure","s","decodeURIComponent","exec"],"mappings":"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","file":"../vendor/main.js","sourcesContent":["/* Zepto v1.2.0 - zepto event ajax form ie - zeptojs.com/license */\r\n(function(global, factory) {\r\n    if (typeof define === 'function' && define.amd)\r\n      define(function() { return factory(global) })\r\n    else\r\n      factory(global)\r\n  }(this, function(window) {\r\n    var Zepto = (function() {\r\n    var undefined, key, $, classList, emptyArray = [], concat = emptyArray.concat, filter = emptyArray.filter, slice = emptyArray.slice,\r\n      document = window.document,\r\n      elementDisplay = {}, classCache = {},\r\n      cssNumber = { 'column-count': 1, 'columns': 1, 'font-weight': 1, 'line-height': 1,'opacity': 1, 'z-index': 1, 'zoom': 1 },\r\n      fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n      singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n      tagExpanderRE = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig,\r\n      rootNodeRE = /^(?:body|html)$/i,\r\n      capitalRE = /([A-Z])/g,\r\n  \r\n      // special attributes that should be get/set via method calls\r\n      methodAttributes = ['val', 'css', 'html', 'text', 'data', 'width', 'height', 'offset'],\r\n  \r\n      adjacencyOperators = [ 'after', 'prepend', 'before', 'append' ],\r\n      table = document.createElement('table'),\r\n      tableRow = document.createElement('tr'),\r\n      containers = {\r\n        'tr': document.createElement('tbody'),\r\n        'tbody': table, 'thead': table, 'tfoot': table,\r\n        'td': tableRow, 'th': tableRow,\r\n        '*': document.createElement('div')\r\n      },\r\n      readyRE = /complete|loaded|interactive/,\r\n      simpleSelectorRE = /^[\\w-]*$/,\r\n      class2type = {},\r\n      toString = class2type.toString,\r\n      zepto = {},\r\n      camelize, uniq,\r\n      tempParent = document.createElement('div'),\r\n      propMap = {\r\n        'tabindex': 'tabIndex',\r\n        'readonly': 'readOnly',\r\n        'for': 'htmlFor',\r\n        'class': 'className',\r\n        'maxlength': 'maxLength',\r\n        'cellspacing': 'cellSpacing',\r\n        'cellpadding': 'cellPadding',\r\n        'rowspan': 'rowSpan',\r\n        'colspan': 'colSpan',\r\n        'usemap': 'useMap',\r\n        'frameborder': 'frameBorder',\r\n        'contenteditable': 'contentEditable'\r\n      },\r\n      isArray = Array.isArray ||\r\n        function(object){ return object instanceof Array }\r\n  \r\n    zepto.matches = function(element, selector) {\r\n      if (!selector || !element || element.nodeType !== 1) return false\r\n      var matchesSelector = element.matches || element.webkitMatchesSelector ||\r\n                            element.mozMatchesSelector || element.oMatchesSelector ||\r\n                            element.matchesSelector\r\n      if (matchesSelector) return matchesSelector.call(element, selector)\r\n      // fall back to performing a selector:\r\n      var match, parent = element.parentNode, temp = !parent\r\n      if (temp) (parent = tempParent).appendChild(element)\r\n      match = ~zepto.qsa(parent, selector).indexOf(element)\r\n      temp && tempParent.removeChild(element)\r\n      return match\r\n    }\r\n  \r\n    function type(obj) {\r\n      return obj == null ? String(obj) :\r\n        class2type[toString.call(obj)] || \"object\"\r\n    }\r\n  \r\n    function isFunction(value) { return type(value) == \"function\" }\r\n    function isWindow(obj)     { return obj != null && obj == obj.window }\r\n    function isDocument(obj)   { return obj != null && obj.nodeType == obj.DOCUMENT_NODE }\r\n    function isObject(obj)     { return type(obj) == \"object\" }\r\n    function isPlainObject(obj) {\r\n      return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype\r\n    }\r\n  \r\n    function likeArray(obj) {\r\n      var length = !!obj && 'length' in obj && obj.length,\r\n        type = $.type(obj)\r\n  \r\n      return 'function' != type && !isWindow(obj) && (\r\n        'array' == type || length === 0 ||\r\n          (typeof length == 'number' && length > 0 && (length - 1) in obj)\r\n      )\r\n    }\r\n  \r\n    function compact(array) { return filter.call(array, function(item){ return item != null }) }\r\n    function flatten(array) { return array.length > 0 ? $.fn.concat.apply([], array) : array }\r\n    camelize = function(str){ return str.replace(/-+(.)?/g, function(match, chr){ return chr ? chr.toUpperCase() : '' }) }\r\n    function dasherize(str) {\r\n      return str.replace(/::/g, '/')\r\n             .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n             .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n             .replace(/_/g, '-')\r\n             .toLowerCase()\r\n    }\r\n    uniq = function(array){ return filter.call(array, function(item, idx){ return array.indexOf(item) == idx }) }\r\n  \r\n    function classRE(name) {\r\n      return name in classCache ?\r\n        classCache[name] : (classCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'))\r\n    }\r\n  \r\n    function maybeAddPx(name, value) {\r\n      return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n  \r\n    function defaultDisplay(nodeName) {\r\n      var element, display\r\n      if (!elementDisplay[nodeName]) {\r\n        element = document.createElement(nodeName)\r\n        document.body.appendChild(element)\r\n        display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n        element.parentNode.removeChild(element)\r\n        display == \"none\" && (display = \"block\")\r\n        elementDisplay[nodeName] = display\r\n      }\r\n      return elementDisplay[nodeName]\r\n    }\r\n  \r\n    function children(element) {\r\n      return 'children' in element ?\r\n        slice.call(element.children) :\r\n        $.map(element.childNodes, function(node){ if (node.nodeType == 1) return node })\r\n    }\r\n  \r\n    function Z(dom, selector) {\r\n      var i, len = dom ? dom.length : 0\r\n      for (i = 0; i < len; i++) this[i] = dom[i]\r\n      this.length = len\r\n      this.selector = selector || ''\r\n    }\r\n  \r\n    // `$.zepto.fragment` takes a html string and an optional tag name\r\n    // to generate DOM nodes from the given html string.\r\n    // The generated DOM nodes are returned as an array.\r\n    // This function can be overridden in plugins for example to make\r\n    // it compatible with browsers that don't support the DOM fully.\r\n    zepto.fragment = function(html, name, properties) {\r\n      var dom, nodes, container\r\n  \r\n      // A special case optimization for a single tag\r\n      if (singleTagRE.test(html)) dom = $(document.createElement(RegExp.$1))\r\n  \r\n      if (!dom) {\r\n        if (html.replace) html = html.replace(tagExpanderRE, \"<$1></$2>\")\r\n        if (name === undefined) name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) name = '*'\r\n  \r\n        container = containers[name]\r\n        container.innerHTML = '' + html\r\n        dom = $.each(slice.call(container.childNodes), function(){\r\n          container.removeChild(this)\r\n        })\r\n      }\r\n  \r\n      if (isPlainObject(properties)) {\r\n        nodes = $(dom)\r\n        $.each(properties, function(key, value) {\r\n          if (methodAttributes.indexOf(key) > -1) nodes[key](value)\r\n          else nodes.attr(key, value)\r\n        })\r\n      }\r\n  \r\n      return dom\r\n    }\r\n  \r\n    // `$.zepto.Z` swaps out the prototype of the given `dom` array\r\n    // of nodes with `$.fn` and thus supplying all the Zepto functions\r\n    // to the array. This method can be overridden in plugins.\r\n    zepto.Z = function(dom, selector) {\r\n      return new Z(dom, selector)\r\n    }\r\n  \r\n    // `$.zepto.isZ` should return `true` if the given object is a Zepto\r\n    // collection. This method can be overridden in plugins.\r\n    zepto.isZ = function(object) {\r\n      return object instanceof zepto.Z\r\n    }\r\n  \r\n    // `$.zepto.init` is Zepto's counterpart to jQuery's `$.fn.init` and\r\n    // takes a CSS selector and an optional context (and handles various\r\n    // special cases).\r\n    // This method can be overridden in plugins.\r\n    zepto.init = function(selector, context) {\r\n      var dom\r\n      // If nothing given, return an empty Zepto collection\r\n      if (!selector) return zepto.Z()\r\n      // Optimize for string selectors\r\n      else if (typeof selector == 'string') {\r\n        selector = selector.trim()\r\n        // If it's a html fragment, create nodes from it\r\n        // Note: In both Chrome 21 and Firefox 15, DOM error 12\r\n        // is thrown if the fragment doesn't begin with <\r\n        if (selector[0] == '<' && fragmentRE.test(selector))\r\n          dom = zepto.fragment(selector, RegExp.$1, context), selector = null\r\n        // If there's a context, create a collection on that context first, and select\r\n        // nodes from there\r\n        else if (context !== undefined) return $(context).find(selector)\r\n        // If it's a CSS selector, use it to select nodes.\r\n        else dom = zepto.qsa(document, selector)\r\n      }\r\n      // If a function is given, call it when the DOM is ready\r\n      else if (isFunction(selector)) return $(document).ready(selector)\r\n      // If a Zepto collection is given, just return it\r\n      else if (zepto.isZ(selector)) return selector\r\n      else {\r\n        // normalize array if an array of nodes is given\r\n        if (isArray(selector)) dom = compact(selector)\r\n        // Wrap DOM nodes.\r\n        else if (isObject(selector))\r\n          dom = [selector], selector = null\r\n        // If it's a html fragment, create nodes from it\r\n        else if (fragmentRE.test(selector))\r\n          dom = zepto.fragment(selector.trim(), RegExp.$1, context), selector = null\r\n        // If there's a context, create a collection on that context first, and select\r\n        // nodes from there\r\n        else if (context !== undefined) return $(context).find(selector)\r\n        // And last but no least, if it's a CSS selector, use it to select nodes.\r\n        else dom = zepto.qsa(document, selector)\r\n      }\r\n      // create a new Zepto collection from the nodes found\r\n      return zepto.Z(dom, selector)\r\n    }\r\n  \r\n    // `$` will be the base `Zepto` object. When calling this\r\n    // function just call `$.zepto.init, which makes the implementation\r\n    // details of selecting nodes and creating Zepto collections\r\n    // patchable in plugins.\r\n    $ = function(selector, context){\r\n      return zepto.init(selector, context)\r\n    }\r\n  \r\n    function extend(target, source, deep) {\r\n      for (key in source)\r\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n          if (isPlainObject(source[key]) && !isPlainObject(target[key]))\r\n            target[key] = {}\r\n          if (isArray(source[key]) && !isArray(target[key]))\r\n            target[key] = []\r\n          extend(target[key], source[key], deep)\r\n        }\r\n        else if (source[key] !== undefined) target[key] = source[key]\r\n    }\r\n  \r\n    // Copy all but undefined properties from one or more\r\n    // objects to the `target` object.\r\n    $.extend = function(target){\r\n      var deep, args = slice.call(arguments, 1)\r\n      if (typeof target == 'boolean') {\r\n        deep = target\r\n        target = args.shift()\r\n      }\r\n      args.forEach(function(arg){ extend(target, arg, deep) })\r\n      return target\r\n    }\r\n  \r\n    // `$.zepto.qsa` is Zepto's CSS selector implementation which\r\n    // uses `document.querySelectorAll` and optimizes for some special cases, like `#id`.\r\n    // This method can be overridden in plugins.\r\n    zepto.qsa = function(element, selector){\r\n      var found,\r\n          maybeID = selector[0] == '#',\r\n          maybeClass = !maybeID && selector[0] == '.',\r\n          nameOnly = maybeID || maybeClass ? selector.slice(1) : selector, // Ensure that a 1 char tag name still gets checked\r\n          isSimple = simpleSelectorRE.test(nameOnly)\r\n      return (element.getElementById && isSimple && maybeID) ? // Safari DocumentFragment doesn't have getElementById\r\n        ( (found = element.getElementById(nameOnly)) ? [found] : [] ) :\r\n        (element.nodeType !== 1 && element.nodeType !== 9 && element.nodeType !== 11) ? [] :\r\n        slice.call(\r\n          isSimple && !maybeID && element.getElementsByClassName ? // DocumentFragment doesn't have getElementsByClassName/TagName\r\n            maybeClass ? element.getElementsByClassName(nameOnly) : // If it's simple, it could be a class\r\n            element.getElementsByTagName(selector) : // Or a tag\r\n            element.querySelectorAll(selector) // Or it's not simple, and we need to query all\r\n        )\r\n    }\r\n  \r\n    function filtered(nodes, selector) {\r\n      return selector == null ? $(nodes) : $(nodes).filter(selector)\r\n    }\r\n  \r\n    $.contains = document.documentElement.contains ?\r\n      function(parent, node) {\r\n        return parent !== node && parent.contains(node)\r\n      } :\r\n      function(parent, node) {\r\n        while (node && (node = node.parentNode))\r\n          if (node === parent) return true\r\n        return false\r\n      }\r\n  \r\n    function funcArg(context, arg, idx, payload) {\r\n      return isFunction(arg) ? arg.call(context, idx, payload) : arg\r\n    }\r\n  \r\n    function setAttribute(node, name, value) {\r\n      value == null ? node.removeAttribute(name) : node.setAttribute(name, value)\r\n    }\r\n  \r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value){\r\n      var klass = node.className || '',\r\n          svg   = klass && klass.baseVal !== undefined\r\n  \r\n      if (value === undefined) return svg ? klass.baseVal : klass\r\n      svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n  \r\n    // \"true\"  => true\r\n    // \"false\" => false\r\n    // \"null\"  => null\r\n    // \"42\"    => 42\r\n    // \"42.5\"  => 42.5\r\n    // \"08\"    => \"08\"\r\n    // JSON    => parse if valid\r\n    // String  => self\r\n    function deserializeValue(value) {\r\n      try {\r\n        return value ?\r\n          value == \"true\" ||\r\n          ( value == \"false\" ? false :\r\n            value == \"null\" ? null :\r\n            +value + \"\" == value ? +value :\r\n            /^[\\[\\{]/.test(value) ? $.parseJSON(value) :\r\n            value )\r\n          : value\r\n      } catch(e) {\r\n        return value\r\n      }\r\n    }\r\n  \r\n    $.type = type\r\n    $.isFunction = isFunction\r\n    $.isWindow = isWindow\r\n    $.isArray = isArray\r\n    $.isPlainObject = isPlainObject\r\n  \r\n    $.isEmptyObject = function(obj) {\r\n      var name\r\n      for (name in obj) return false\r\n      return true\r\n    }\r\n  \r\n    $.isNumeric = function(val) {\r\n      var num = Number(val), type = typeof val\r\n      return val != null && type != 'boolean' &&\r\n        (type != 'string' || val.length) &&\r\n        !isNaN(num) && isFinite(num) || false\r\n    }\r\n  \r\n    $.inArray = function(elem, array, i){\r\n      return emptyArray.indexOf.call(array, elem, i)\r\n    }\r\n  \r\n    $.camelCase = camelize\r\n    $.trim = function(str) {\r\n      return str == null ? \"\" : String.prototype.trim.call(str)\r\n    }\r\n  \r\n    // plugin compatibility\r\n    $.uuid = 0\r\n    $.support = { }\r\n    $.expr = { }\r\n    $.noop = function() {}\r\n  \r\n    $.map = function(elements, callback){\r\n      var value, values = [], i, key\r\n      if (likeArray(elements))\r\n        for (i = 0; i < elements.length; i++) {\r\n          value = callback(elements[i], i)\r\n          if (value != null) values.push(value)\r\n        }\r\n      else\r\n        for (key in elements) {\r\n          value = callback(elements[key], key)\r\n          if (value != null) values.push(value)\r\n        }\r\n      return flatten(values)\r\n    }\r\n  \r\n    $.each = function(elements, callback){\r\n      var i, key\r\n      if (likeArray(elements)) {\r\n        for (i = 0; i < elements.length; i++)\r\n          if (callback.call(elements[i], i, elements[i]) === false) return elements\r\n      } else {\r\n        for (key in elements)\r\n          if (callback.call(elements[key], key, elements[key]) === false) return elements\r\n      }\r\n  \r\n      return elements\r\n    }\r\n  \r\n    $.grep = function(elements, callback){\r\n      return filter.call(elements, callback)\r\n    }\r\n  \r\n    if (window.JSON) $.parseJSON = JSON.parse\r\n  \r\n    // Populate the class2type map\r\n    $.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n      class2type[ \"[object \" + name + \"]\" ] = name.toLowerCase()\r\n    })\r\n  \r\n    // Define methods that will be available on all\r\n    // Zepto collections\r\n    $.fn = {\r\n      constructor: zepto.Z,\r\n      length: 0,\r\n  \r\n      // Because a collection acts like an array\r\n      // copy over these useful array functions.\r\n      forEach: emptyArray.forEach,\r\n      reduce: emptyArray.reduce,\r\n      push: emptyArray.push,\r\n      sort: emptyArray.sort,\r\n      splice: emptyArray.splice,\r\n      indexOf: emptyArray.indexOf,\r\n      concat: function(){\r\n        var i, value, args = []\r\n        for (i = 0; i < arguments.length; i++) {\r\n          value = arguments[i]\r\n          args[i] = zepto.isZ(value) ? value.toArray() : value\r\n        }\r\n        return concat.apply(zepto.isZ(this) ? this.toArray() : this, args)\r\n      },\r\n  \r\n      // `map` and `slice` in the jQuery API work differently\r\n      // from their array counterparts\r\n      map: function(fn){\r\n        return $($.map(this, function(el, i){ return fn.call(el, i, el) }))\r\n      },\r\n      slice: function(){\r\n        return $(slice.apply(this, arguments))\r\n      },\r\n  \r\n      ready: function(callback){\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body element\r\n        if (readyRE.test(document.readyState) && document.body) callback($)\r\n        else document.addEventListener('DOMContentLoaded', function(){ callback($) }, false)\r\n        return this\r\n      },\r\n      get: function(idx){\r\n        return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n      },\r\n      toArray: function(){ return this.get() },\r\n      size: function(){\r\n        return this.length\r\n      },\r\n      remove: function(){\r\n        return this.each(function(){\r\n          if (this.parentNode != null)\r\n            this.parentNode.removeChild(this)\r\n        })\r\n      },\r\n      each: function(callback){\r\n        emptyArray.every.call(this, function(el, idx){\r\n          return callback.call(el, idx, el) !== false\r\n        })\r\n        return this\r\n      },\r\n      filter: function(selector){\r\n        if (isFunction(selector)) return this.not(this.not(selector))\r\n        return $(filter.call(this, function(element){\r\n          return zepto.matches(element, selector)\r\n        }))\r\n      },\r\n      add: function(selector,context){\r\n        return $(uniq(this.concat($(selector,context))))\r\n      },\r\n      is: function(selector){\r\n        return this.length > 0 && zepto.matches(this[0], selector)\r\n      },\r\n      not: function(selector){\r\n        var nodes=[]\r\n        if (isFunction(selector) && selector.call !== undefined)\r\n          this.each(function(idx){\r\n            if (!selector.call(this,idx)) nodes.push(this)\r\n          })\r\n        else {\r\n          var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n            (likeArray(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n          this.forEach(function(el){\r\n            if (excludes.indexOf(el) < 0) nodes.push(el)\r\n          })\r\n        }\r\n        return $(nodes)\r\n      },\r\n      has: function(selector){\r\n        return this.filter(function(){\r\n          return isObject(selector) ?\r\n            $.contains(this, selector) :\r\n            $(this).find(selector).size()\r\n        })\r\n      },\r\n      eq: function(idx){\r\n        return idx === -1 ? this.slice(idx) : this.slice(idx, + idx + 1)\r\n      },\r\n      first: function(){\r\n        var el = this[0]\r\n        return el && !isObject(el) ? el : $(el)\r\n      },\r\n      last: function(){\r\n        var el = this[this.length - 1]\r\n        return el && !isObject(el) ? el : $(el)\r\n      },\r\n      find: function(selector){\r\n        var result, $this = this\r\n        if (!selector) result = $()\r\n        else if (typeof selector == 'object')\r\n          result = $(selector).filter(function(){\r\n            var node = this\r\n            return emptyArray.some.call($this, function(parent){\r\n              return $.contains(parent, node)\r\n            })\r\n          })\r\n        else if (this.length == 1) result = $(zepto.qsa(this[0], selector))\r\n        else result = this.map(function(){ return zepto.qsa(this, selector) })\r\n        return result\r\n      },\r\n      closest: function(selector, context){\r\n        var nodes = [], collection = typeof selector == 'object' && $(selector)\r\n        this.each(function(_, node){\r\n          while (node && !(collection ? collection.indexOf(node) >= 0 : zepto.matches(node, selector)))\r\n            node = node !== context && !isDocument(node) && node.parentNode\r\n          if (node && nodes.indexOf(node) < 0) nodes.push(node)\r\n        })\r\n        return $(nodes)\r\n      },\r\n      parents: function(selector){\r\n        var ancestors = [], nodes = this\r\n        while (nodes.length > 0)\r\n          nodes = $.map(nodes, function(node){\r\n            if ((node = node.parentNode) && !isDocument(node) && ancestors.indexOf(node) < 0) {\r\n              ancestors.push(node)\r\n              return node\r\n            }\r\n          })\r\n        return filtered(ancestors, selector)\r\n      },\r\n      parent: function(selector){\r\n        return filtered(uniq(this.pluck('parentNode')), selector)\r\n      },\r\n      children: function(selector){\r\n        return filtered(this.map(function(){ return children(this) }), selector)\r\n      },\r\n      contents: function() {\r\n        return this.map(function() { return this.contentDocument || slice.call(this.childNodes) })\r\n      },\r\n      siblings: function(selector){\r\n        return filtered(this.map(function(i, el){\r\n          return filter.call(children(el.parentNode), function(child){ return child!==el })\r\n        }), selector)\r\n      },\r\n      empty: function(){\r\n        return this.each(function(){ this.innerHTML = '' })\r\n      },\r\n      // `pluck` is borrowed from Prototype.js\r\n      pluck: function(property){\r\n        return $.map(this, function(el){ return el[property] })\r\n      },\r\n      show: function(){\r\n        return this.each(function(){\r\n          this.style.display == \"none\" && (this.style.display = '')\r\n          if (getComputedStyle(this, '').getPropertyValue(\"display\") == \"none\")\r\n            this.style.display = defaultDisplay(this.nodeName)\r\n        })\r\n      },\r\n      replaceWith: function(newContent){\r\n        return this.before(newContent).remove()\r\n      },\r\n      wrap: function(structure){\r\n        var func = isFunction(structure)\r\n        if (this[0] && !func)\r\n          var dom   = $(structure).get(0),\r\n              clone = dom.parentNode || this.length > 1\r\n  \r\n        return this.each(function(index){\r\n          $(this).wrapAll(\r\n            func ? structure.call(this, index) :\r\n              clone ? dom.cloneNode(true) : dom\r\n          )\r\n        })\r\n      },\r\n      wrapAll: function(structure){\r\n        if (this[0]) {\r\n          $(this[0]).before(structure = $(structure))\r\n          var children\r\n          // drill down to the inmost element\r\n          while ((children = structure.children()).length) structure = children.first()\r\n          $(structure).append(this)\r\n        }\r\n        return this\r\n      },\r\n      wrapInner: function(structure){\r\n        var func = isFunction(structure)\r\n        return this.each(function(index){\r\n          var self = $(this), contents = self.contents(),\r\n              dom  = func ? structure.call(this, index) : structure\r\n          contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n        })\r\n      },\r\n      unwrap: function(){\r\n        this.parent().each(function(){\r\n          $(this).replaceWith($(this).children())\r\n        })\r\n        return this\r\n      },\r\n      clone: function(){\r\n        return this.map(function(){ return this.cloneNode(true) })\r\n      },\r\n      hide: function(){\r\n        return this.css(\"display\", \"none\")\r\n      },\r\n      toggle: function(setting){\r\n        return this.each(function(){\r\n          var el = $(this)\r\n          ;(setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\r\n        })\r\n      },\r\n      prev: function(selector){ return $(this.pluck('previousElementSibling')).filter(selector || '*') },\r\n      next: function(selector){ return $(this.pluck('nextElementSibling')).filter(selector || '*') },\r\n      html: function(html){\r\n        return 0 in arguments ?\r\n          this.each(function(idx){\r\n            var originHtml = this.innerHTML\r\n            $(this).empty().append( funcArg(this, html, idx, originHtml) )\r\n          }) :\r\n          (0 in this ? this[0].innerHTML : null)\r\n      },\r\n      text: function(text){\r\n        return 0 in arguments ?\r\n          this.each(function(idx){\r\n            var newText = funcArg(this, text, idx, this.textContent)\r\n            this.textContent = newText == null ? '' : ''+newText\r\n          }) :\r\n          (0 in this ? this.pluck('textContent').join(\"\") : null)\r\n      },\r\n      attr: function(name, value){\r\n        var result\r\n        return (typeof name == 'string' && !(1 in arguments)) ?\r\n          (0 in this && this[0].nodeType == 1 && (result = this[0].getAttribute(name)) != null ? result : undefined) :\r\n          this.each(function(idx){\r\n            if (this.nodeType !== 1) return\r\n            if (isObject(name)) for (key in name) setAttribute(this, key, name[key])\r\n            else setAttribute(this, name, funcArg(this, value, idx, this.getAttribute(name)))\r\n          })\r\n      },\r\n      removeAttr: function(name){\r\n        return this.each(function(){ this.nodeType === 1 && name.split(' ').forEach(function(attribute){\r\n          setAttribute(this, attribute)\r\n        }, this)})\r\n      },\r\n      prop: function(name, value){\r\n        name = propMap[name] || name\r\n        return (1 in arguments) ?\r\n          this.each(function(idx){\r\n            this[name] = funcArg(this, value, idx, this[name])\r\n          }) :\r\n          (this[0] && this[0][name])\r\n      },\r\n      removeProp: function(name){\r\n        name = propMap[name] || name\r\n        return this.each(function(){ delete this[name] })\r\n      },\r\n      data: function(name, value){\r\n        var attrName = 'data-' + name.replace(capitalRE, '-$1').toLowerCase()\r\n  \r\n        var data = (1 in arguments) ?\r\n          this.attr(attrName, value) :\r\n          this.attr(attrName)\r\n  \r\n        return data !== null ? deserializeValue(data) : undefined\r\n      },\r\n      val: function(value){\r\n        if (0 in arguments) {\r\n          if (value == null) value = \"\"\r\n          return this.each(function(idx){\r\n            this.value = funcArg(this, value, idx, this.value)\r\n          })\r\n        } else {\r\n          return this[0] && (this[0].multiple ?\r\n             $(this[0]).find('option').filter(function(){ return this.selected }).pluck('value') :\r\n             this[0].value)\r\n        }\r\n      },\r\n      offset: function(coordinates){\r\n        if (coordinates) return this.each(function(index){\r\n          var $this = $(this),\r\n              coords = funcArg(this, coordinates, index, $this.offset()),\r\n              parentOffset = $this.offsetParent().offset(),\r\n              props = {\r\n                top:  coords.top  - parentOffset.top,\r\n                left: coords.left - parentOffset.left\r\n              }\r\n  \r\n          if ($this.css('position') == 'static') props['position'] = 'relative'\r\n          $this.css(props)\r\n        })\r\n        if (!this.length) return null\r\n        if (document.documentElement !== this[0] && !$.contains(document.documentElement, this[0]))\r\n          return {top: 0, left: 0}\r\n        var obj = this[0].getBoundingClientRect()\r\n        return {\r\n          left: obj.left + window.pageXOffset,\r\n          top: obj.top + window.pageYOffset,\r\n          width: Math.round(obj.width),\r\n          height: Math.round(obj.height)\r\n        }\r\n      },\r\n      css: function(property, value){\r\n        if (arguments.length < 2) {\r\n          var element = this[0]\r\n          if (typeof property == 'string') {\r\n            if (!element) return\r\n            return element.style[camelize(property)] || getComputedStyle(element, '').getPropertyValue(property)\r\n          } else if (isArray(property)) {\r\n            if (!element) return\r\n            var props = {}\r\n            var computedStyle = getComputedStyle(element, '')\r\n            $.each(property, function(_, prop){\r\n              props[prop] = (element.style[camelize(prop)] || computedStyle.getPropertyValue(prop))\r\n            })\r\n            return props\r\n          }\r\n        }\r\n  \r\n        var css = ''\r\n        if (type(property) == 'string') {\r\n          if (!value && value !== 0)\r\n            this.each(function(){ this.style.removeProperty(dasherize(property)) })\r\n          else\r\n            css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n        } else {\r\n          for (key in property)\r\n            if (!property[key] && property[key] !== 0)\r\n              this.each(function(){ this.style.removeProperty(dasherize(key)) })\r\n            else\r\n              css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n        }\r\n  \r\n        return this.each(function(){ this.style.cssText += ';' + css })\r\n      },\r\n      index: function(element){\r\n        return element ? this.indexOf($(element)[0]) : this.parent().children().indexOf(this[0])\r\n      },\r\n      hasClass: function(name){\r\n        if (!name) return false\r\n        return emptyArray.some.call(this, function(el){\r\n          return this.test(className(el))\r\n        }, classRE(name))\r\n      },\r\n      addClass: function(name){\r\n        if (!name) return this\r\n        return this.each(function(idx){\r\n          if (!('className' in this)) return\r\n          classList = []\r\n          var cls = className(this), newName = funcArg(this, name, idx, cls)\r\n          newName.split(/\\s+/g).forEach(function(klass){\r\n            if (!$(this).hasClass(klass)) classList.push(klass)\r\n          }, this)\r\n          classList.length && className(this, cls + (cls ? \" \" : \"\") + classList.join(\" \"))\r\n        })\r\n      },\r\n      removeClass: function(name){\r\n        return this.each(function(idx){\r\n          if (!('className' in this)) return\r\n          if (name === undefined) return className(this, '')\r\n          classList = className(this)\r\n          funcArg(this, name, idx, classList).split(/\\s+/g).forEach(function(klass){\r\n            classList = classList.replace(classRE(klass), \" \")\r\n          })\r\n          className(this, classList.trim())\r\n        })\r\n      },\r\n      toggleClass: function(name, when){\r\n        if (!name) return this\r\n        return this.each(function(idx){\r\n          var $this = $(this), names = funcArg(this, name, idx, className(this))\r\n          names.split(/\\s+/g).forEach(function(klass){\r\n            (when === undefined ? !$this.hasClass(klass) : when) ?\r\n              $this.addClass(klass) : $this.removeClass(klass)\r\n          })\r\n        })\r\n      },\r\n      scrollTop: function(value){\r\n        if (!this.length) return\r\n        var hasScrollTop = 'scrollTop' in this[0]\r\n        if (value === undefined) return hasScrollTop ? this[0].scrollTop : this[0].pageYOffset\r\n        return this.each(hasScrollTop ?\r\n          function(){ this.scrollTop = value } :\r\n          function(){ this.scrollTo(this.scrollX, value) })\r\n      },\r\n      scrollLeft: function(value){\r\n        if (!this.length) return\r\n        var hasScrollLeft = 'scrollLeft' in this[0]\r\n        if (value === undefined) return hasScrollLeft ? this[0].scrollLeft : this[0].pageXOffset\r\n        return this.each(hasScrollLeft ?\r\n          function(){ this.scrollLeft = value } :\r\n          function(){ this.scrollTo(value, this.scrollY) })\r\n      },\r\n      position: function() {\r\n        if (!this.length) return\r\n  \r\n        var elem = this[0],\r\n          // Get *real* offsetParent\r\n          offsetParent = this.offsetParent(),\r\n          // Get correct offsets\r\n          offset       = this.offset(),\r\n          parentOffset = rootNodeRE.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset()\r\n  \r\n        // Subtract element margins\r\n        // note: when an element has margin: auto the offsetLeft and marginLeft\r\n        // are the same in Safari causing offset.left to incorrectly be 0\r\n        offset.top  -= parseFloat( $(elem).css('margin-top') ) || 0\r\n        offset.left -= parseFloat( $(elem).css('margin-left') ) || 0\r\n  \r\n        // Add offsetParent borders\r\n        parentOffset.top  += parseFloat( $(offsetParent[0]).css('border-top-width') ) || 0\r\n        parentOffset.left += parseFloat( $(offsetParent[0]).css('border-left-width') ) || 0\r\n  \r\n        // Subtract the two offsets\r\n        return {\r\n          top:  offset.top  - parentOffset.top,\r\n          left: offset.left - parentOffset.left\r\n        }\r\n      },\r\n      offsetParent: function() {\r\n        return this.map(function(){\r\n          var parent = this.offsetParent || document.body\r\n          while (parent && !rootNodeRE.test(parent.nodeName) && $(parent).css(\"position\") == \"static\")\r\n            parent = parent.offsetParent\r\n          return parent\r\n        })\r\n      }\r\n    }\r\n  \r\n    // for now\r\n    $.fn.detach = $.fn.remove\r\n  \r\n    // Generate the `width` and `height` functions\r\n    ;['width', 'height'].forEach(function(dimension){\r\n      var dimensionProperty =\r\n        dimension.replace(/./, function(m){ return m[0].toUpperCase() })\r\n  \r\n      $.fn[dimension] = function(value){\r\n        var offset, el = this[0]\r\n        if (value === undefined) return isWindow(el) ? el['inner' + dimensionProperty] :\r\n          isDocument(el) ? el.documentElement['scroll' + dimensionProperty] :\r\n          (offset = this.offset()) && offset[dimension]\r\n        else return this.each(function(idx){\r\n          el = $(this)\r\n          el.css(dimension, funcArg(this, value, idx, el[dimension]()))\r\n        })\r\n      }\r\n    })\r\n  \r\n    function traverseNode(node, fun) {\r\n      fun(node)\r\n      for (var i = 0, len = node.childNodes.length; i < len; i++)\r\n        traverseNode(node.childNodes[i], fun)\r\n    }\r\n  \r\n    // Generate the `after`, `prepend`, `before`, `append`,\r\n    // `insertAfter`, `insertBefore`, `appendTo`, and `prependTo` methods.\r\n    adjacencyOperators.forEach(function(operator, operatorIndex) {\r\n      var inside = operatorIndex % 2 //=> prepend, append\r\n  \r\n      $.fn[operator] = function(){\r\n        // arguments can be nodes, arrays of nodes, Zepto objects and HTML strings\r\n        var argType, nodes = $.map(arguments, function(arg) {\r\n              var arr = []\r\n              argType = type(arg)\r\n              if (argType == \"array\") {\r\n                arg.forEach(function(el) {\r\n                  if (el.nodeType !== undefined) return arr.push(el)\r\n                  else if ($.zepto.isZ(el)) return arr = arr.concat(el.get())\r\n                  arr = arr.concat(zepto.fragment(el))\r\n                })\r\n                return arr\r\n              }\r\n              return argType == \"object\" || arg == null ?\r\n                arg : zepto.fragment(arg)\r\n            }),\r\n            parent, copyByClone = this.length > 1\r\n        if (nodes.length < 1) return this\r\n  \r\n        return this.each(function(_, target){\r\n          parent = inside ? target : target.parentNode\r\n  \r\n          // convert all methods to a \"before\" operation\r\n          target = operatorIndex == 0 ? target.nextSibling :\r\n                   operatorIndex == 1 ? target.firstChild :\r\n                   operatorIndex == 2 ? target :\r\n                   null\r\n  \r\n          var parentInDocument = $.contains(document.documentElement, parent)\r\n  \r\n          nodes.forEach(function(node){\r\n            if (copyByClone) node = node.cloneNode(true)\r\n            else if (!parent) return $(node).remove()\r\n  \r\n            parent.insertBefore(node, target)\r\n            if (parentInDocument) traverseNode(node, function(el){\r\n              if (el.nodeName != null && el.nodeName.toUpperCase() === 'SCRIPT' &&\r\n                 (!el.type || el.type === 'text/javascript') && !el.src){\r\n                var target = el.ownerDocument ? el.ownerDocument.defaultView : window\r\n                target['eval'].call(target, el.innerHTML)\r\n              }\r\n            })\r\n          })\r\n        })\r\n      }\r\n  \r\n      // after    => insertAfter\r\n      // prepend  => prependTo\r\n      // before   => insertBefore\r\n      // append   => appendTo\r\n      $.fn[inside ? operator+'To' : 'insert'+(operatorIndex ? 'Before' : 'After')] = function(html){\r\n        $(html)[operator](this)\r\n        return this\r\n      }\r\n    })\r\n  \r\n    zepto.Z.prototype = Z.prototype = $.fn\r\n  \r\n    // Export internal API functions in the `$.zepto` namespace\r\n    zepto.uniq = uniq\r\n    zepto.deserializeValue = deserializeValue\r\n    $.zepto = zepto\r\n  \r\n    return $\r\n  })()\r\n  \r\n  window.Zepto = Zepto\r\n  window.$ === undefined && (window.$ = Zepto)\r\n  \r\n  ;(function($){\r\n    var _zid = 1, undefined,\r\n        slice = Array.prototype.slice,\r\n        isFunction = $.isFunction,\r\n        isString = function(obj){ return typeof obj == 'string' },\r\n        handlers = {},\r\n        specialEvents={},\r\n        focusinSupported = 'onfocusin' in window,\r\n        focus = { focus: 'focusin', blur: 'focusout' },\r\n        hover = { mouseenter: 'mouseover', mouseleave: 'mouseout' }\r\n  \r\n    specialEvents.click = specialEvents.mousedown = specialEvents.mouseup = specialEvents.mousemove = 'MouseEvents'\r\n  \r\n    function zid(element) {\r\n      return element._zid || (element._zid = _zid++)\r\n    }\r\n    function findHandlers(element, event, fn, selector) {\r\n      event = parse(event)\r\n      if (event.ns) var matcher = matcherFor(event.ns)\r\n      return (handlers[zid(element)] || []).filter(function(handler) {\r\n        return handler\r\n          && (!event.e  || handler.e == event.e)\r\n          && (!event.ns || matcher.test(handler.ns))\r\n          && (!fn       || zid(handler.fn) === zid(fn))\r\n          && (!selector || handler.sel == selector)\r\n      })\r\n    }\r\n    function parse(event) {\r\n      var parts = ('' + event).split('.')\r\n      return {e: parts[0], ns: parts.slice(1).sort().join(' ')}\r\n    }\r\n    function matcherFor(ns) {\r\n      return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)')\r\n    }\r\n  \r\n    function eventCapture(handler, captureSetting) {\r\n      return handler.del &&\r\n        (!focusinSupported && (handler.e in focus)) ||\r\n        !!captureSetting\r\n    }\r\n  \r\n    function realEvent(type) {\r\n      return hover[type] || (focusinSupported && focus[type]) || type\r\n    }\r\n  \r\n    function add(element, events, fn, data, selector, delegator, capture){\r\n      var id = zid(element), set = (handlers[id] || (handlers[id] = []))\r\n      events.split(/\\s/).forEach(function(event){\r\n        if (event == 'ready') return $(document).ready(fn)\r\n        var handler   = parse(event)\r\n        handler.fn    = fn\r\n        handler.sel   = selector\r\n        // emulate mouseenter, mouseleave\r\n        if (handler.e in hover) fn = function(e){\r\n          var related = e.relatedTarget\r\n          if (!related || (related !== this && !$.contains(this, related)))\r\n            return handler.fn.apply(this, arguments)\r\n        }\r\n        handler.del   = delegator\r\n        var callback  = delegator || fn\r\n        handler.proxy = function(e){\r\n          e = compatible(e)\r\n          if (e.isImmediatePropagationStopped()) return\r\n          e.data = data\r\n          var result = callback.apply(element, e._args == undefined ? [e] : [e].concat(e._args))\r\n          if (result === false) e.preventDefault(), e.stopPropagation()\r\n          return result\r\n        }\r\n        handler.i = set.length\r\n        set.push(handler)\r\n        if ('addEventListener' in element)\r\n          element.addEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\r\n      })\r\n    }\r\n    function remove(element, events, fn, selector, capture){\r\n      var id = zid(element)\r\n      ;(events || '').split(/\\s/).forEach(function(event){\r\n        findHandlers(element, event, fn, selector).forEach(function(handler){\r\n          delete handlers[id][handler.i]\r\n        if ('removeEventListener' in element)\r\n          element.removeEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\r\n        })\r\n      })\r\n    }\r\n  \r\n    $.event = { add: add, remove: remove }\r\n  \r\n    $.proxy = function(fn, context) {\r\n      var args = (2 in arguments) && slice.call(arguments, 2)\r\n      if (isFunction(fn)) {\r\n        var proxyFn = function(){ return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments) }\r\n        proxyFn._zid = zid(fn)\r\n        return proxyFn\r\n      } else if (isString(context)) {\r\n        if (args) {\r\n          args.unshift(fn[context], fn)\r\n          return $.proxy.apply(null, args)\r\n        } else {\r\n          return $.proxy(fn[context], fn)\r\n        }\r\n      } else {\r\n        throw new TypeError(\"expected function\")\r\n      }\r\n    }\r\n  \r\n    $.fn.bind = function(event, data, callback){\r\n      return this.on(event, data, callback)\r\n    }\r\n    $.fn.unbind = function(event, callback){\r\n      return this.off(event, callback)\r\n    }\r\n    $.fn.one = function(event, selector, data, callback){\r\n      return this.on(event, selector, data, callback, 1)\r\n    }\r\n  \r\n    var returnTrue = function(){return true},\r\n        returnFalse = function(){return false},\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$|webkitMovement[XY]$)/,\r\n        eventMethods = {\r\n          preventDefault: 'isDefaultPrevented',\r\n          stopImmediatePropagation: 'isImmediatePropagationStopped',\r\n          stopPropagation: 'isPropagationStopped'\r\n        }\r\n  \r\n    function compatible(event, source) {\r\n      if (source || !event.isDefaultPrevented) {\r\n        source || (source = event)\r\n  \r\n        $.each(eventMethods, function(name, predicate) {\r\n          var sourceMethod = source[name]\r\n          event[name] = function(){\r\n            this[predicate] = returnTrue\r\n            return sourceMethod && sourceMethod.apply(source, arguments)\r\n          }\r\n          event[predicate] = returnFalse\r\n        })\r\n  \r\n        event.timeStamp || (event.timeStamp = Date.now())\r\n  \r\n        if (source.defaultPrevented !== undefined ? source.defaultPrevented :\r\n            'returnValue' in source ? source.returnValue === false :\r\n            source.getPreventDefault && source.getPreventDefault())\r\n          event.isDefaultPrevented = returnTrue\r\n      }\r\n      return event\r\n    }\r\n  \r\n    function createProxy(event) {\r\n      var key, proxy = { originalEvent: event }\r\n      for (key in event)\r\n        if (!ignoreProperties.test(key) && event[key] !== undefined) proxy[key] = event[key]\r\n  \r\n      return compatible(proxy, event)\r\n    }\r\n  \r\n    $.fn.delegate = function(selector, event, callback){\r\n      return this.on(event, selector, callback)\r\n    }\r\n    $.fn.undelegate = function(selector, event, callback){\r\n      return this.off(event, selector, callback)\r\n    }\r\n  \r\n    $.fn.live = function(event, callback){\r\n      $(document.body).delegate(this.selector, event, callback)\r\n      return this\r\n    }\r\n    $.fn.die = function(event, callback){\r\n      $(document.body).undelegate(this.selector, event, callback)\r\n      return this\r\n    }\r\n  \r\n    $.fn.on = function(event, selector, data, callback, one){\r\n      var autoRemove, delegator, $this = this\r\n      if (event && !isString(event)) {\r\n        $.each(event, function(type, fn){\r\n          $this.on(type, selector, data, fn, one)\r\n        })\r\n        return $this\r\n      }\r\n  \r\n      if (!isString(selector) && !isFunction(callback) && callback !== false)\r\n        callback = data, data = selector, selector = undefined\r\n      if (callback === undefined || data === false)\r\n        callback = data, data = undefined\r\n  \r\n      if (callback === false) callback = returnFalse\r\n  \r\n      return $this.each(function(_, element){\r\n        if (one) autoRemove = function(e){\r\n          remove(element, e.type, callback)\r\n          return callback.apply(this, arguments)\r\n        }\r\n  \r\n        if (selector) delegator = function(e){\r\n          var evt, match = $(e.target).closest(selector, element).get(0)\r\n          if (match && match !== element) {\r\n            evt = $.extend(createProxy(e), {currentTarget: match, liveFired: element})\r\n            return (autoRemove || callback).apply(match, [evt].concat(slice.call(arguments, 1)))\r\n          }\r\n        }\r\n  \r\n        add(element, event, callback, data, selector, delegator || autoRemove)\r\n      })\r\n    }\r\n    $.fn.off = function(event, selector, callback){\r\n      var $this = this\r\n      if (event && !isString(event)) {\r\n        $.each(event, function(type, fn){\r\n          $this.off(type, selector, fn)\r\n        })\r\n        return $this\r\n      }\r\n  \r\n      if (!isString(selector) && !isFunction(callback) && callback !== false)\r\n        callback = selector, selector = undefined\r\n  \r\n      if (callback === false) callback = returnFalse\r\n  \r\n      return $this.each(function(){\r\n        remove(this, event, callback, selector)\r\n      })\r\n    }\r\n  \r\n    $.fn.trigger = function(event, args){\r\n      event = (isString(event) || $.isPlainObject(event)) ? $.Event(event) : compatible(event)\r\n      event._args = args\r\n      return this.each(function(){\r\n        // handle focus(), blur() by calling them directly\r\n        if (event.type in focus && typeof this[event.type] == \"function\") this[event.type]()\r\n        // items in the collection might not be DOM elements\r\n        else if ('dispatchEvent' in this) this.dispatchEvent(event)\r\n        else $(this).triggerHandler(event, args)\r\n      })\r\n    }\r\n  \r\n    // triggers event handlers on current element just as if an event occurred,\r\n    // doesn't trigger an actual event, doesn't bubble\r\n    $.fn.triggerHandler = function(event, args){\r\n      var e, result\r\n      this.each(function(i, element){\r\n        e = createProxy(isString(event) ? $.Event(event) : event)\r\n        e._args = args\r\n        e.target = element\r\n        $.each(findHandlers(element, event.type || event), function(i, handler){\r\n          result = handler.proxy(e)\r\n          if (e.isImmediatePropagationStopped()) return false\r\n        })\r\n      })\r\n      return result\r\n    }\r\n  \r\n    // shortcut methods for `.bind(event, fn)` for each event type\r\n    ;('focusin focusout focus blur load resize scroll unload click dblclick '+\r\n    'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave '+\r\n    'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n      $.fn[event] = function(callback) {\r\n        return (0 in arguments) ?\r\n          this.bind(event, callback) :\r\n          this.trigger(event)\r\n      }\r\n    })\r\n  \r\n    $.Event = function(type, props) {\r\n      if (!isString(type)) props = type, type = props.type\r\n      var event = document.createEvent(specialEvents[type] || 'Events'), bubbles = true\r\n      if (props) for (var name in props) (name == 'bubbles') ? (bubbles = !!props[name]) : (event[name] = props[name])\r\n      event.initEvent(type, bubbles, true)\r\n      return compatible(event)\r\n    }\r\n  \r\n  })(Zepto)\r\n  \r\n  ;(function($){\r\n    var jsonpID = +new Date(),\r\n        document = window.document,\r\n        key,\r\n        name,\r\n        rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n        jsonType = 'application/json',\r\n        htmlType = 'text/html',\r\n        blankRE = /^\\s*$/,\r\n        originAnchor = document.createElement('a')\r\n  \r\n    originAnchor.href = window.location.href\r\n  \r\n    // trigger a custom event and return false if it was cancelled\r\n    function triggerAndReturn(context, eventName, data) {\r\n      var event = $.Event(eventName)\r\n      $(context).trigger(event, data)\r\n      return !event.isDefaultPrevented()\r\n    }\r\n  \r\n    // trigger an Ajax \"global\" event\r\n    function triggerGlobal(settings, context, eventName, data) {\r\n      if (settings.global) return triggerAndReturn(context || document, eventName, data)\r\n    }\r\n  \r\n    // Number of active Ajax requests\r\n    $.active = 0\r\n  \r\n    function ajaxStart(settings) {\r\n      if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\r\n    }\r\n    function ajaxStop(settings) {\r\n      if (settings.global && !(--$.active)) triggerGlobal(settings, null, 'ajaxStop')\r\n    }\r\n  \r\n    // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\r\n    function ajaxBeforeSend(xhr, settings) {\r\n      var context = settings.context\r\n      if (settings.beforeSend.call(context, xhr, settings) === false ||\r\n          triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\r\n        return false\r\n  \r\n      triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\r\n    }\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n      var context = settings.context, status = 'success'\r\n      settings.success.call(context, data, status, xhr)\r\n      if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n      triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n      ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n      var context = settings.context\r\n      settings.error.call(context, xhr, type, error)\r\n      if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n      triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n      ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n      var context = settings.context\r\n      settings.complete.call(context, xhr, status)\r\n      triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n      ajaxStop(settings)\r\n    }\r\n  \r\n    function ajaxDataFilter(data, type, settings) {\r\n      if (settings.dataFilter == empty) return data\r\n      var context = settings.context\r\n      return settings.dataFilter.call(context, data, type)\r\n    }\r\n  \r\n    // Empty function, used as default callback\r\n    function empty() {}\r\n  \r\n    $.ajaxJSONP = function(options, deferred){\r\n      if (!('type' in options)) return $.ajax(options)\r\n  \r\n      var _callbackName = options.jsonpCallback,\r\n        callbackName = ($.isFunction(_callbackName) ?\r\n          _callbackName() : _callbackName) || ('Zepto' + (jsonpID++)),\r\n        script = document.createElement('script'),\r\n        originalCallback = window[callbackName],\r\n        responseData,\r\n        abort = function(errorType) {\r\n          $(script).triggerHandler('error', errorType || 'abort')\r\n        },\r\n        xhr = { abort: abort }, abortTimeout\r\n  \r\n      if (deferred) deferred.promise(xhr)\r\n  \r\n      $(script).on('load error', function(e, errorType){\r\n        clearTimeout(abortTimeout)\r\n        $(script).off().remove()\r\n  \r\n        if (e.type == 'error' || !responseData) {\r\n          ajaxError(null, errorType || 'error', xhr, options, deferred)\r\n        } else {\r\n          ajaxSuccess(responseData[0], xhr, options, deferred)\r\n        }\r\n  \r\n        window[callbackName] = originalCallback\r\n        if (responseData && $.isFunction(originalCallback))\r\n          originalCallback(responseData[0])\r\n  \r\n        originalCallback = responseData = undefined\r\n      })\r\n  \r\n      if (ajaxBeforeSend(xhr, options) === false) {\r\n        abort('abort')\r\n        return xhr\r\n      }\r\n  \r\n      window[callbackName] = function(){\r\n        responseData = arguments\r\n      }\r\n  \r\n      script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n      document.head.appendChild(script)\r\n  \r\n      if (options.timeout > 0) abortTimeout = setTimeout(function(){\r\n        abort('timeout')\r\n      }, options.timeout)\r\n  \r\n      return xhr\r\n    }\r\n  \r\n    $.ajaxSettings = {\r\n      // Default type of request\r\n      type: 'GET',\r\n      // Callback that is executed before request\r\n      beforeSend: empty,\r\n      // Callback that is executed if the request succeeds\r\n      success: empty,\r\n      // Callback that is executed the the server drops error\r\n      error: empty,\r\n      // Callback that is executed on request complete (both: error and success)\r\n      complete: empty,\r\n      // The context for the callbacks\r\n      context: null,\r\n      // Whether to trigger \"global\" Ajax events\r\n      global: true,\r\n      // Transport\r\n      xhr: function () {\r\n        return new window.XMLHttpRequest()\r\n      },\r\n      // MIME types mapping\r\n      // IIS returns Javascript as \"application/x-javascript\"\r\n      accepts: {\r\n        script: 'text/javascript, application/javascript, application/x-javascript',\r\n        json:   jsonType,\r\n        xml:    'application/xml, text/xml',\r\n        html:   htmlType,\r\n        text:   'text/plain'\r\n      },\r\n      // Whether the request is to another domain\r\n      crossDomain: false,\r\n      // Default timeout\r\n      timeout: 0,\r\n      // Whether data should be serialized to string\r\n      processData: true,\r\n      // Whether the browser should be allowed to cache GET responses\r\n      cache: true,\r\n      //Used to handle the raw response data of XMLHttpRequest.\r\n      //This is a pre-filtering function to sanitize the response.\r\n      //The sanitized response should be returned\r\n      dataFilter: empty\r\n    }\r\n  \r\n    function mimeToDataType(mime) {\r\n      if (mime) mime = mime.split(';', 2)[0]\r\n      return mime && ( mime == htmlType ? 'html' :\r\n        mime == jsonType ? 'json' :\r\n        scriptTypeRE.test(mime) ? 'script' :\r\n        xmlTypeRE.test(mime) && 'xml' ) || 'text'\r\n    }\r\n  \r\n    function appendQuery(url, query) {\r\n      if (query == '') return url\r\n      return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n  \r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n      if (options.processData && options.data && $.type(options.data) != \"string\")\r\n        options.data = $.param(options.data, options.traditional)\r\n      if (options.data && (!options.type || options.type.toUpperCase() == 'GET' || 'jsonp' == options.dataType))\r\n        options.url = appendQuery(options.url, options.data), options.data = undefined\r\n    }\r\n  \r\n    $.ajax = function(options){\r\n      var settings = $.extend({}, options || {}),\r\n          deferred = $.Deferred && $.Deferred(),\r\n          urlAnchor, hashIndex\r\n      for (key in $.ajaxSettings) if (settings[key] === undefined) settings[key] = $.ajaxSettings[key]\r\n  \r\n      ajaxStart(settings)\r\n  \r\n      if (!settings.crossDomain) {\r\n        urlAnchor = document.createElement('a')\r\n        urlAnchor.href = settings.url\r\n        // cleans up URL for .href (IE only), see https://github.com/madrobby/zepto/pull/1049\r\n        urlAnchor.href = urlAnchor.href\r\n        settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)\r\n      }\r\n  \r\n      if (!settings.url) settings.url = window.location.toString()\r\n      if ((hashIndex = settings.url.indexOf('#')) > -1) settings.url = settings.url.slice(0, hashIndex)\r\n      serializeData(settings)\r\n  \r\n      var dataType = settings.dataType, hasPlaceholder = /\\?.+=\\?/.test(settings.url)\r\n      if (hasPlaceholder) dataType = 'jsonp'\r\n  \r\n      if (settings.cache === false || (\r\n           (!options || options.cache !== true) &&\r\n           ('script' == dataType || 'jsonp' == dataType)\r\n          ))\r\n        settings.url = appendQuery(settings.url, '_=' + Date.now())\r\n  \r\n      if ('jsonp' == dataType) {\r\n        if (!hasPlaceholder)\r\n          settings.url = appendQuery(settings.url,\r\n            settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\r\n        return $.ajaxJSONP(settings, deferred)\r\n      }\r\n  \r\n      var mime = settings.accepts[dataType],\r\n          headers = { },\r\n          setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n          protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n          xhr = settings.xhr(),\r\n          nativeSetHeader = xhr.setRequestHeader,\r\n          abortTimeout\r\n  \r\n      if (deferred) deferred.promise(xhr)\r\n  \r\n      if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\r\n      setHeader('Accept', mime || '*/*')\r\n      if (mime = settings.mimeType || mime) {\r\n        if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n        xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n      }\r\n      if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\r\n        setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n  \r\n      if (settings.headers) for (name in settings.headers) setHeader(name, settings.headers[name])\r\n      xhr.setRequestHeader = setHeader\r\n  \r\n      xhr.onreadystatechange = function(){\r\n        if (xhr.readyState == 4) {\r\n          xhr.onreadystatechange = empty\r\n          clearTimeout(abortTimeout)\r\n          var result, error = false\r\n          if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n            dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n  \r\n            if (xhr.responseType == 'arraybuffer' || xhr.responseType == 'blob')\r\n              result = xhr.response\r\n            else {\r\n              result = xhr.responseText\r\n  \r\n              try {\r\n                // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                // sanitize response accordingly if data filter callback provided\r\n                result = ajaxDataFilter(result, dataType, settings)\r\n                if (dataType == 'script')    (1,eval)(result)\r\n                else if (dataType == 'xml')  result = xhr.responseXML\r\n                else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result)\r\n              } catch (e) { error = e }\r\n  \r\n              if (error) return ajaxError(error, 'parsererror', xhr, settings, deferred)\r\n            }\r\n  \r\n            ajaxSuccess(result, xhr, settings, deferred)\r\n          } else {\r\n            ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\r\n          }\r\n        }\r\n      }\r\n  \r\n      if (ajaxBeforeSend(xhr, settings) === false) {\r\n        xhr.abort()\r\n        ajaxError(null, 'abort', xhr, settings, deferred)\r\n        return xhr\r\n      }\r\n  \r\n      var async = 'async' in settings ? settings.async : true\r\n      xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n  \r\n      if (settings.xhrFields) for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n  \r\n      for (name in headers) nativeSetHeader.apply(xhr, headers[name])\r\n  \r\n      if (settings.timeout > 0) abortTimeout = setTimeout(function(){\r\n          xhr.onreadystatechange = empty\r\n          xhr.abort()\r\n          ajaxError(null, 'timeout', xhr, settings, deferred)\r\n        }, settings.timeout)\r\n  \r\n      // avoid sending empty string (#319)\r\n      xhr.send(settings.data ? settings.data : null)\r\n      return xhr\r\n    }\r\n  \r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n      if ($.isFunction(data)) dataType = success, success = data, data = undefined\r\n      if (!$.isFunction(success)) dataType = success, success = undefined\r\n      return {\r\n        url: url\r\n      , data: data\r\n      , success: success\r\n      , dataType: dataType\r\n      }\r\n    }\r\n  \r\n    $.get = function(/* url, data, success, dataType */){\r\n      return $.ajax(parseArguments.apply(null, arguments))\r\n    }\r\n  \r\n    $.post = function(/* url, data, success, dataType */){\r\n      var options = parseArguments.apply(null, arguments)\r\n      options.type = 'POST'\r\n      return $.ajax(options)\r\n    }\r\n  \r\n    $.getJSON = function(/* url, data, success */){\r\n      var options = parseArguments.apply(null, arguments)\r\n      options.dataType = 'json'\r\n      return $.ajax(options)\r\n    }\r\n  \r\n    $.fn.load = function(url, data, success){\r\n      if (!this.length) return this\r\n      var self = this, parts = url.split(/\\s/), selector,\r\n          options = parseArguments(url, data, success),\r\n          callback = options.success\r\n      if (parts.length > 1) options.url = parts[0], selector = parts[1]\r\n      options.success = function(response){\r\n        self.html(selector ?\r\n          $('<div>').html(response.replace(rscript, \"\")).find(selector)\r\n          : response)\r\n        callback && callback.apply(self, arguments)\r\n      }\r\n      $.ajax(options)\r\n      return this\r\n    }\r\n  \r\n    var escape = encodeURIComponent\r\n  \r\n    function serialize(params, obj, traditional, scope){\r\n      var type, array = $.isArray(obj), hash = $.isPlainObject(obj)\r\n      $.each(obj, function(key, value) {\r\n        type = $.type(value)\r\n        if (scope) key = traditional ? scope :\r\n          scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\r\n        // handle data in serializeArray() format\r\n        if (!scope && array) params.add(value.name, value.value)\r\n        // recurse into nested objects\r\n        else if (type == \"array\" || (!traditional && type == \"object\"))\r\n          serialize(params, value, traditional, key)\r\n        else params.add(key, value)\r\n      })\r\n    }\r\n  \r\n    $.param = function(obj, traditional){\r\n      var params = []\r\n      params.add = function(key, value) {\r\n        if ($.isFunction(value)) value = value()\r\n        if (value == null) value = \"\"\r\n        this.push(escape(key) + '=' + escape(value))\r\n      }\r\n      serialize(params, obj, traditional)\r\n      return params.join('&').replace(/%20/g, '+')\r\n    }\r\n  })(Zepto)\r\n  \r\n  ;(function($){\r\n    $.fn.serializeArray = function() {\r\n      var name, type, result = [],\r\n        add = function(value) {\r\n          if (value.forEach) return value.forEach(add)\r\n          result.push({ name: name, value: value })\r\n        }\r\n      if (this[0]) $.each(this[0].elements, function(_, field){\r\n        type = field.type, name = field.name\r\n        if (name && field.nodeName.toLowerCase() != 'fieldset' &&\r\n          !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\r\n          ((type != 'radio' && type != 'checkbox') || field.checked))\r\n            add($(field).val())\r\n      })\r\n      return result\r\n    }\r\n  \r\n    $.fn.serialize = function(){\r\n      var result = []\r\n      this.serializeArray().forEach(function(elm){\r\n        result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\r\n      })\r\n      return result.join('&')\r\n    }\r\n  \r\n    $.fn.submit = function(callback) {\r\n      if (0 in arguments) this.bind('submit', callback)\r\n      else if (this.length) {\r\n        var event = $.Event('submit')\r\n        this.eq(0).trigger(event)\r\n        if (!event.isDefaultPrevented()) this.get(0).submit()\r\n      }\r\n      return this\r\n    }\r\n  \r\n  })(Zepto)\r\n  \r\n  ;(function(){\r\n    // getComputedStyle shouldn't freak out when called\r\n    // without a valid element as argument\r\n    try {\r\n      getComputedStyle(undefined)\r\n    } catch(e) {\r\n      var nativeGetComputedStyle = getComputedStyle\r\n      window.getComputedStyle = function(element, pseudoElement){\r\n        try {\r\n          return nativeGetComputedStyle(element, pseudoElement)\r\n        } catch(e) {\r\n          return null\r\n        }\r\n      }\r\n    }\r\n  })()\r\n    return Zepto\r\n  }));\r\n  ","// Zepto.cookie plugin\r\n// \r\n// Copyright (c) 2010, 2012 \r\n// @author Klaus Hartl (stilbuero.de)\r\n// @author Daniel Lacy (daniellacy.com)\r\n// \r\n// Dual licensed under the MIT and GPL licenses:\r\n// http://www.opensource.org/licenses/mit-license.php\r\n// http://www.gnu.org/licenses/gpl.html\r\n;(function($){\r\n    $.extend($.fn, {\r\n        cookie : function (key, value, options) {\r\n            var days, time, result, decode\r\n\r\n            // A key and value were given. Set cookie.\r\n            if (arguments.length > 1 && String(value) !== \"[object Object]\") {\r\n                // Enforce object\r\n                options = $.extend({}, options)\r\n\r\n                if (value === null || value === undefined) options.expires = -1\r\n\r\n                if (typeof options.expires === 'number') {\r\n                    days = (options.expires * 24 * 60 * 60 * 1000)\r\n                    time = options.expires = new Date()\r\n\r\n                    time.setTime(time.getTime() + days)\r\n                }\r\n\r\n                value = String(value)\r\n\r\n                return (document.cookie = [\r\n                    encodeURIComponent(key), '=',\r\n                    options.raw ? value : encodeURIComponent(value),\r\n                    options.expires ? '; expires=' + options.expires.toUTCString() : '',\r\n                    options.path ? '; path=' + options.path : '',\r\n                    options.domain ? '; domain=' + options.domain : '',\r\n                    options.secure ? '; secure' : ''\r\n                ].join(''))\r\n            }\r\n\r\n            // Key and possibly options given, get cookie\r\n            options = value || {}\r\n\r\n            decode = options.raw ? function (s) { return s } : decodeURIComponent\r\n\r\n            return (result = new RegExp('(?:^|; )' + encodeURIComponent(key) + '=([^;]*)').exec(document.cookie)) ? decode(result[1]) : null\r\n        }\r\n\r\n    })\r\n})(Zepto);\r\n","$(document).ready(function () {\r\n\r\nvar k = 5;\r\n\r\n$(\".header\").css(\"color\", \"Red\");\r\n});"]}